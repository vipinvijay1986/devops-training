apiVersion: v1
kind: Service
metadata:
  name: hr-employee-v2
  namespace: egov
  labels:
    app: hr-employee-v2
    group: hr-2.0
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: hr-employee-v2
    group: hr-2.0
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hr-employee-v2
  namespace: egov
spec:
  replicas: {{conf['hr-employee-v2']['replicas']}}
  template:
    metadata:
      labels:
        app: hr-employee-v2
        group: hr-2.0
    spec:
      initContainers:
      {% if conf["hr-employee-v2"]["env_specific_db_migration_image"] %}
        - name: "hr-employee-v2-env-specific-db-migration"
          image: "{{conf["hr-employee-v2"]["env_specific_db_migration_image"]}}"
          command: ["sh", "-c", "cp -R /egov/db/migration/hr-2.0/hr-employee-v2/* /env_specific_db_migration/"]
        volumeMounts:
        - mountPath: "/env_specific_db_migration"
          name: "env-specific-db-migration"
        imagePullPolicy: "IfNotPresent"
      {% endif %}

      - name: "hr-employee-v2-db-migration"
        image: "{{conf["hr-employee-v2"]["db_migration_image"]}}"
        env:
        - name: "DB_URL"
          valueFrom:
          value: "{{ conf['hr-employee-v2']['db-url']}}"
        - name: "SCHEMA_TABLE"
          value: "hr_employee_v2_schema"
        - name: "FLYWAY_USER"
          valueFrom:
            secretKeyRef:
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: flyway-locations
        volumeMounts:
        - mountPath: "/env_specific_db_migration"
          name: "env-specific-db-migration"
        imagePullPolicy: "IfNotPresent"
      containers:
      - name: hr-employee-v2
        image: {{conf['hr-employee-v2']['images'][0]}}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: "{{ conf['hr-employee-v2']['db-url']}}"
          # valueFrom:
          #   configMapKeyRef:
          #     name: egov-config
          #     key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: EGOV_SERVICES_HR_EMPLOYEE_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-employee-v2']}}"
        - name: EGOV_SERVICES_EGOV_COMMON_MASTERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_SERVICES_HR_MASTERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['hr-masters-v2']}}"
        - name: EGOV_SERVICES_USERS_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_SERVICES_DATA_SYNC_EMPLOYEE_SERVICE_HOSTNAME
          value: "{{conf['egov-service-host']['data-sync-employee']}}"
        - name: EGOV_SERVICES_EGOV_IDGEN_HOSTNAME
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: KAFKA_TOPICS_NOTIFICATION_SMS_NAME
          value: egov.core.notification.sms
        - name: KAFKA_TOPICS_NOTIFICATION_SMS_ID
          value: egov.core.notification.sms
        - name: KAFKA_TOPICS_NOTIFICATION_SMS_GROUP
          value: egov.core.notification.sms
        - name: KAFKA_TOPICS_EMPLOYEE_SAVEDB_NAME
          value: egov.employee
        - name: KAFKA_TOPICS_EMPLOYEE_SAVEDB_KEY
          value: employee
        - name: EGOV_SERVICES_EGOV_MDMS_HOSTNAME
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_SERVICES_HR_EMPLOYEE_SERVICE_DEFAULT_PASSWORD
          value: "12345678"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['hr-employee-v2']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
      volumes:
      - name: env-specific-db-migration
        emptyDir: {}
{% if conf['egov-docker-registry-secret'] %}
      imagePullSecrets:
      - name: regsecret
{% endif %}
